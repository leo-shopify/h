{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["var h = (function () {\n'use strict';\n\n/**\n * Lightweight DOM element creation based on a subset of the hyperscript API and\n * compatible with JSX.\n * @module\n * @author leo-shopify <leonardo.rojas@shopify.com>\n */\n\n\n/**\n * @type {function}\n */\nconst objToStr = Object.prototype.toString;\n\n\n/**\n * @type {function}\n */\nconst toArray = Array.prototype.slice;\n\n\n/**\n * Minimal Document interface needed by `h`.\n * @type {Object} DocumentLike\n * @prop {function(string)} createElement\n * @prop {function()} createDocumentFragment\n * @prop {function(string)} createTextNode\n */\n\n\n/**\n * Minimal HTMLElement interface needed by `h`.\n * @type {Object} HTMLElementLike\n * @prop {number} [nodeType=1]\n * @prop {function(string, *)} setAttribute\n * @prop {function(string)} removeAttribute\n * @prop {function(HTMLElementLike)} appendChild\n * @prop {object} [attributes]\n * @prop {array} [children]\n * @prop {string} [tagName]\n */\n\n\n/**\n * Minimal DocumentFragment interface needed by `h`.\n * @type {Object} DocumentFragmentLike\n * @prop {number} [nodeType=11]\n * @prop {function(HTMLElementLike)} appendChild\n * @prop {array} [children]\n */\n\n\n/**\n * Recursively copy an object.\n * @param {object} to The destination.\n * @param {object} from The source.\n * @return {undefined} Copies in-place.\n */\nfunction deepCopy(to, from) {\n  for (const prop in from) {\n    if (from.hasOwnProperty(prop)) {\n      if (typeof from[prop] === 'object' && from[prop] != null) {\n        to[prop] = to[prop] || {};\n        deepCopy(to[prop], from[prop]);\n      } else {\n        to[prop] = from[prop];\n      }\n    }\n  }\n}\n\n\n/**\n * @type {string}\n */\nconst DEFAULT_TAG = 'div';\n\n/**\n * Closure to allow faking DOM `Document`.\n * @param {DocumentLike} doc Object implementing the DOM `Document` interface.\n * @return {function} `h` closed over `doc`.\n */\nfunction make(doc) {\n\n  /**\n   * Add the child to the element. Skip `null` and `undefined`. Recurse on\n   * `Array`.  If the item has a `nodeType` key, assume it is an HTMLElement or\n   * DocumentFragment and add it. Otherwise convert it to a `Text` node.\n   * @param {HTMLElementLike} element The parent element.\n   * @param {*} item The object to be appended as a child of element.\n   * @return {HTMLElementLike} The modified parent element.\n   */\n  function addChildren(element, item) {\n    if (item == null) { return element; }\n    if (Array.isArray(item)) { return item.reduce(addChildren, element); }\n    element.appendChild(item.nodeType ? item : doc.createTextNode(item));\n    return element;\n  }\n\n\n  /**\n   * Creates or modifies DOM elements.\n   * @param {string | HTMLElementLike | function} [tag='div'] Either a string\n   * representing the type of the element to create, an existing element to\n   * modify, or a function to delegate the construction. Defaults to `'div'` if\n   * falsy.\n   * @param {object | null} [attributes=null] Optional attributes object.\n   * @param {...*} [children] Optional children.\n   * @return {HTMLElementLike} Resulting DOM element.\n   */\n  return function h(/* ...args */) {\n\n    /**\n     * Convert the `arguments` object to a real array skipping the first\n     * argument.\n     * @type {array}\n     */\n    const args = toArray.call(arguments, 1); // eslint-disable-line prefer-rest-params\n\n    /**\n     * Ensure `tag` is defined.\n     */\n    const tag = arguments[0] || DEFAULT_TAG; // eslint-disable-line prefer-rest-params\n\n    /**\n     * If `tag` is a function delegate and bail early.\n     */\n    if (typeof tag === 'function') {\n      return tag.apply(null, args); // eslint-disable-line prefer-spread\n    }\n\n    /**\n     * Create the element.\n     *\n     * If `tag.nodeType` is 1 assume it is an existing element.\n     * Else coerce to `string` and create a new element.\n     */\n    let element;\n\n    if (tag.nodeType && tag.nodeType === 1) {\n      element = tag;\n    } else {\n      // eslint-disable-next-line no-implicit-coercion, prefer-template\n      element = doc.createElement(tag + '' || DEFAULT_TAG);\n    }\n\n    /**\n     * Add the attributes.\n     *\n     *\n     * A value qualifies as an `attributes` object if it is: `null`, `Map`,\n     * `WeakMap` and plain `Object`.  If the value is `Object` it cannot contain\n     * a `nodeType` key.\n     */\n    const first = args[0];\n    if (first === null ||\n        (objToStr.call(first) === '[object Object]' && !('nodeType' in first))) {\n\n      /**\n       * If the first element from the arguments is an `attributes` value, copy\n       * it and set the original to null which is skipped by the children\n       * processor. This is faster than `Array.shift()`.\n       */\n      const attributes = first;\n      args[0] = null;\n\n      /**\n       * Iterate over the attributes keys.\n       */\n      for (const attrKey in attributes) { // eslint-disable-line guard-for-in\n        const attrVal = attributes[attrKey];\n\n        /**\n         * If the special key `$` is found, use it to populate the element's\n         * properties.\n         *\n         * If the value of the key is `function` set it as a property.\n         *\n         * If the value of the key is `undefined` or `null` remove the attribute\n         * from the element. Otherwise add it.\n         */\n        if (attrKey === '$') {\n          deepCopy(element, attrVal);\n        } else if (attrVal == null) {\n          element.removeAttribute(attrKey);\n        } else {\n          element.setAttribute(attrKey, attrVal);\n        }\n      }\n    }\n\n    /**\n     * The remaining elements of `rest` are the children. Add them to the\n     * element.\n     */\n    return args.reduce(addChildren, element);\n  };\n}\n\n/* eslint-env browser */\n\nvar index = make(document);\n\nreturn index;\n\n}());\n//# sourceMappingURL=index.js.map\n"]}